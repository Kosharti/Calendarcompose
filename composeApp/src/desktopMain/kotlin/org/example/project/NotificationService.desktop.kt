package org.example.project

import java.awt.SystemTray
import java.awt.Toolkit
import java.awt.TrayIcon
import javax.swing.ImageIcon

actual class NotificationService actual constructor(private val context: Any?) {
    actual fun showNotification(title: String, message: String) {
        showDesktopNotification(title, message)
    }

    actual fun showReminderNotification(title: String, message: String) {
        showDesktopNotification("üîî $title", message)
    }

    private fun showDesktopNotification(title: String, message: String) {
        try {
            if (SystemTray.isSupported()) {
                val tray = SystemTray.getSystemTray()

                // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∏–∫–æ–Ω–∫—É (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à—É)
                val image = Toolkit.getDefaultToolkit().createImage("")
                val trayIcon = TrayIcon(image, "Schedule App")
                trayIcon.isImageAutoSize = true

                // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç—Ä–µ–π
                tray.add(trayIcon)

                // –ü–û–ö–ê–ó–´–í–ê–ï–ú –£–í–ï–î–û–ú–õ–ï–ù–ò–ï
                trayIcon.displayMessage(title, message, TrayIcon.MessageType.INFO)

                // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                Thread {
                    Thread.sleep(5000)
                    tray.remove(trayIcon)
                }.start()
            } else {
                // Fallback –¥–ª—è —Å–∏—Å—Ç–µ–º –±–µ–∑ —Ç—Ä–µ—è
                println("üîî $title: $message")
            }
        } catch (e: Exception) {
            // –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Ö–æ—Ç—è –±—ã –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å
            println("üîî $title: $message")
            e.printStackTrace()
        }
    }
}